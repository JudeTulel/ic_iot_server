{"version":3,"file":"bls.js","sourceRoot":"","sources":["../../../src/utils/bls.ts"],"names":[],"mappings":";;;AAAA,uDAAoD;AACpD,qCAAiC;AAIjC;;;;;;GAMG;AACH,SAAgB,SAAS,CAAC,EAAc,EAAE,GAAe,EAAE,GAAe;IACxE,MAAM,UAAU,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAA,cAAK,EAAC,EAAE,CAAC,CAAC;IAC3D,MAAM,SAAS,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAA,cAAK,EAAC,GAAG,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAA,cAAK,EAAC,GAAG,CAAC,CAAC;IAC3D,OAAO,qBAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACxE,CAAC;AALD,8BAKC","sourcesContent":["import { bls12_381 } from '@noble/curves/bls12-381';\nimport { toHex } from './buffer';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk: Uint8Array, sig: Uint8Array, msg: Uint8Array): boolean {\n  const primaryKey = typeof pk === 'string' ? pk : toHex(pk);\n  const signature = typeof sig === 'string' ? sig : toHex(sig);\n  const message = typeof msg === 'string' ? msg : toHex(msg);\n  return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}\n"]}