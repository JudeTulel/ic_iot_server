{"version":3,"file":"random.js","sourceRoot":"","sources":["../../../src/utils/random.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACI,MAAM,YAAY,GAAG,GAAW,EAAE;IACvC,gDAAgD;IAChD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;QACvF,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,oFAAoF;IACpF,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,eAAe,EAAE;QAC3D,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;IAMD,6CAA6C;IAC7C,IAAI,OAAO,MAAM,KAAK,WAAW,IAAK,MAAgC,CAAC,SAAS,EAAE;QAChF,OAAQ,MAAgC,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KACnE;IAED,2BAA2B;IAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC;AAChD,CAAC,CAAC;AAzBW,QAAA,YAAY,gBAyBvB","sourcesContent":["/**\n * Generates a random unsigned 32-bit integer between 0 and 0xffffffff\n * @returns {number} a random number\n */\nexport const randomNumber = (): number => {\n  // determine whether browser crypto is available\n  if (typeof window !== 'undefined' && !!window.crypto && !!window.crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0];\n  }\n  // A second check for webcrypto, in case it is loaded under global instead of window\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    crypto.getRandomValues(array);\n    return array[0];\n  }\n\n  type nodeCrypto = {\n    randomInt: (min: number, max: number) => number;\n  };\n\n  // determine whether node crypto is available\n  if (typeof crypto !== 'undefined' && (crypto as unknown as nodeCrypto).randomInt) {\n    return (crypto as unknown as nodeCrypto).randomInt(0, 0xffffffff);\n  }\n\n  // fall back to Math.random\n  return Math.floor(Math.random() * 0xffffffff);\n};\n"]}