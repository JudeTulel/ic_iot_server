{"version":3,"file":"decode.js","sourceRoot":"","sources":["../../src/decode.ts"],"names":[],"mappings":";AAAA,MAAM,MAAM,GACV,6JAA6J,CAAC;AAEhK,SAAS,OAAO,CAAC,GAAW;IAC1B,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KAClC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AACD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;AAEpB,uCAAuC;AACvC,SAAS,KAAK,CAAC,MAAgC;IAC7C,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG;SACvB,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACpE,IAAI,CAAC,EAAE,CAAC,CAAC;AACd,CAAC;AACD,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG","sourcesContent":["const base64 =\n  'owBjMS4wAYIB2BhYS6QBAiABIVgg9mAYr7gvS1_HoS6jCYHeU5CsIXm9WIKdDYO_K40TcpAiWCBS71FJ5Dqpen-RGx7B9myPf4KdLrgkt2iUfnjVBnXaCAKBgwIBowD0AfULUEpqDHHSUUKfgCqA9h8vDqs';\n\nfunction convert(str: string) {\n  const byteArray = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    byteArray[i] = str.charCodeAt(i);\n  }\n  return byteArray;\n}\nconvert(base64); //?\n\n// turn uint8array into string of bytes\nfunction toHex(buffer: ArrayBuffer | Uint8Array) {\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2))\n    .join('');\n}\ntoHex(convert(base64)); //?\n"]}